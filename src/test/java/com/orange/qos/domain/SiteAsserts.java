package com.orange.qos.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SiteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteAllPropertiesEquals(Site expected, Site actual) {
        assertSiteAutoGeneratedPropertiesEquals(expected, actual);
        assertSiteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteAllUpdatablePropertiesEquals(Site expected, Site actual) {
        assertSiteUpdatableFieldsEquals(expected, actual);
        assertSiteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteAutoGeneratedPropertiesEquals(Site expected, Site actual) {
        assertThat(actual)
            .as("Verify Site auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteUpdatableFieldsEquals(Site expected, Site actual) {
        assertThat(actual)
            .as("Verify Site relevant properties")
            .satisfies(a -> assertThat(a.getNomSite()).as("check nomSite").isEqualTo(expected.getNomSite()))
            .satisfies(a -> assertThat(a.getCodeOCI()).as("check codeOCI").isEqualTo(expected.getCodeOCI()))
            .satisfies(a -> assertThat(a.getLongitude()).as("check longitude").isEqualTo(expected.getLongitude()))
            .satisfies(a -> assertThat(a.getLatitude()).as("check latitude").isEqualTo(expected.getLatitude()))
            .satisfies(a -> assertThat(a.getStatut()).as("check statut").isEqualTo(expected.getStatut()))
            .satisfies(a -> assertThat(a.getTechnologie()).as("check technologie").isEqualTo(expected.getTechnologie()))
            .satisfies(a -> assertThat(a.getEnService()).as("check enService").isEqualTo(expected.getEnService()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSiteUpdatableRelationshipsEquals(Site expected, Site actual) {
        // empty method
    }
}
