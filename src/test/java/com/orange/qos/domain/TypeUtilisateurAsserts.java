package com.orange.qos.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TypeUtilisateurAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeUtilisateurAllPropertiesEquals(TypeUtilisateur expected, TypeUtilisateur actual) {
        assertTypeUtilisateurAutoGeneratedPropertiesEquals(expected, actual);
        assertTypeUtilisateurAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeUtilisateurAllUpdatablePropertiesEquals(TypeUtilisateur expected, TypeUtilisateur actual) {
        assertTypeUtilisateurUpdatableFieldsEquals(expected, actual);
        assertTypeUtilisateurUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeUtilisateurAutoGeneratedPropertiesEquals(TypeUtilisateur expected, TypeUtilisateur actual) {
        assertThat(actual)
            .as("Verify TypeUtilisateur auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeUtilisateurUpdatableFieldsEquals(TypeUtilisateur expected, TypeUtilisateur actual) {
        assertThat(actual)
            .as("Verify TypeUtilisateur relevant properties")
            .satisfies(a -> assertThat(a.getNom()).as("check nom").isEqualTo(expected.getNom()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getNiveau()).as("check niveau").isEqualTo(expected.getNiveau()))
            .satisfies(a -> assertThat(a.getPermissions()).as("check permissions").isEqualTo(expected.getPermissions()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTypeUtilisateurUpdatableRelationshipsEquals(TypeUtilisateur expected, TypeUtilisateur actual) {
        // empty method
    }
}
