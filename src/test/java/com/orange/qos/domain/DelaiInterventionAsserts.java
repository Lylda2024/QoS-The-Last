package com.orange.qos.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DelaiInterventionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDelaiInterventionAllPropertiesEquals(DelaiIntervention expected, DelaiIntervention actual) {
        assertDelaiInterventionAutoGeneratedPropertiesEquals(expected, actual);
        assertDelaiInterventionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDelaiInterventionAllUpdatablePropertiesEquals(DelaiIntervention expected, DelaiIntervention actual) {
        assertDelaiInterventionUpdatableFieldsEquals(expected, actual);
        assertDelaiInterventionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDelaiInterventionAutoGeneratedPropertiesEquals(DelaiIntervention expected, DelaiIntervention actual) {
        assertThat(actual)
            .as("Verify DelaiIntervention auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDelaiInterventionUpdatableFieldsEquals(DelaiIntervention expected, DelaiIntervention actual) {
        assertThat(actual)
            .as("Verify DelaiIntervention relevant properties")
            .satisfies(a -> assertThat(a.getDateDebut()).as("check dateDebut").isEqualTo(expected.getDateDebut()))
            .satisfies(a -> assertThat(a.getDateLimite()).as("check dateLimite").isEqualTo(expected.getDateLimite()))
            .satisfies(a -> assertThat(a.getCommentaire()).as("check commentaire").isEqualTo(expected.getCommentaire()))
            .satisfies(a -> assertThat(a.getStatut()).as("check statut").isEqualTo(expected.getStatut()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDelaiInterventionUpdatableRelationshipsEquals(DelaiIntervention expected, DelaiIntervention actual) {
        assertThat(actual)
            .as("Verify DelaiIntervention relationships")
            .satisfies(a -> assertThat(a.getDegradation()).as("check degradation").isEqualTo(expected.getDegradation()))
            .satisfies(a -> assertThat(a.getUtilisateur()).as("check utilisateur").isEqualTo(expected.getUtilisateur()));
    }
}
